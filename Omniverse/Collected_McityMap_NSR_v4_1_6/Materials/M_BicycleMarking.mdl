mdl 1.6;

import ::math::*;
import ::state::*;
import ::tex::*;
import ::anno::*;
import ::scene::*;
using ..::OmniUe4Function import *;
using ..::OmniUe4Translucent import *;

export annotation sampler_color();
export annotation sampler_normal();
export annotation sampler_grayscale();
export annotation sampler_alpha();
export annotation sampler_masks();
export annotation sampler_distancefield();
export annotation dither_masked_off();
export annotation world_space_normal();

export material M_BicycleMarking(
	int MaxTexCoordIndex = 3
	[[
		anno::hidden()
	]])
 = 
	let {
	float3 WorldPositionOffset_mdl = float3(0.0,0.0,0.0);
	float2 CustomizedUV0_mdl = float2(state::texture_coordinate(math::min(0,MaxTexCoordIndex)).x,1.0-state::texture_coordinate(math::min(0,MaxTexCoordIndex)).y);


	float3 Normal_mdl = float3(0.0,0.0,1.0);

	float4 Local0 = tex::lookup_float4(texture_2d("./Textures/T_BicycleMarking.png",::tex::gamma_srgb),float2(CustomizedUV0_mdl.x,1.0-CustomizedUV0_mdl.y),tex::wrap_repeat,tex::wrap_repeat);

	float3 EmissiveColor_mdl = float3(0.0,0.0,0.0);
	float Opacity_mdl = float3(Local0.x,Local0.y,Local0.z).x;
	float OpacityMask_mdl = (math::saturate(float3(Local0.x,Local0.y,Local0.z).x) - 1.0f / 255.0f) < 0.0f ? 0.0f : 1.0f;
	float3 BaseColor_mdl = float3(Local0.x,Local0.y,Local0.z);
	float Metallic_mdl = 0.0;
	float Specular_mdl = 0.5;
	float Roughness_mdl = 0.5;
	float3 Refraction_mdl = math::max(float3(1.0,0.0,0.0), 1.0f);
	float SurfaceThickness_mdl = 0.01;

	} in
		::OmniUe4Translucent(
			base_color: BaseColor_mdl,
			metallic: Metallic_mdl,
			roughness: Roughness_mdl,
			specular: Specular_mdl,
			normal: Normal_mdl,
			opacity: Opacity_mdl,
			opacity_mask: OpacityMask_mdl,
			emissive_color: EmissiveColor_mdl,
			displacement: WorldPositionOffset_mdl,
			refraction: Refraction_mdl.x,
			two_sided: false);
